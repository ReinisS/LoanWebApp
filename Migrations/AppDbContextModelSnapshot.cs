// <auto-generated />
using LoanWebApp.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LoanWebApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8");

            modelBuilder.Entity("LoanWebApp.Models.Operation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Amount")
                        .HasColumnType("REAL");

                    b.Property<int>("OperationTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PersonFromId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PersonToId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OperationTypeId");

                    b.HasIndex("PersonFromId");

                    b.HasIndex("PersonToId");

                    b.ToTable("Operation");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 1.0,
                            OperationTypeId = 0,
                            PersonFromId = 1,
                            PersonToId = 2
                        },
                        new
                        {
                            Id = 2,
                            Amount = 1.0,
                            OperationTypeId = 1,
                            PersonFromId = 2,
                            PersonToId = 1
                        },
                        new
                        {
                            Id = 3,
                            Amount = 2.0,
                            OperationTypeId = 0,
                            PersonFromId = 1,
                            PersonToId = 3
                        },
                        new
                        {
                            Id = 4,
                            Amount = 1.0,
                            OperationTypeId = 1,
                            PersonFromId = 3,
                            PersonToId = 1
                        },
                        new
                        {
                            Id = 5,
                            Amount = 3.0,
                            OperationTypeId = 0,
                            PersonFromId = 2,
                            PersonToId = 3
                        },
                        new
                        {
                            Id = 6,
                            Amount = 4.0,
                            OperationTypeId = 0,
                            PersonFromId = 2,
                            PersonToId = 3
                        },
                        new
                        {
                            Id = 7,
                            Amount = 2.0,
                            OperationTypeId = 1,
                            PersonFromId = 3,
                            PersonToId = 2
                        },
                        new
                        {
                            Id = 8,
                            Amount = 5.0,
                            OperationTypeId = 0,
                            PersonFromId = 3,
                            PersonToId = 4
                        },
                        new
                        {
                            Id = 9,
                            Amount = 5.0,
                            OperationTypeId = 0,
                            PersonFromId = 3,
                            PersonToId = 4
                        },
                        new
                        {
                            Id = 10,
                            Amount = 5.0,
                            OperationTypeId = 0,
                            PersonFromId = 4,
                            PersonToId = 5
                        },
                        new
                        {
                            Id = 11,
                            Amount = 5.0,
                            OperationTypeId = 0,
                            PersonFromId = 4,
                            PersonToId = 5
                        },
                        new
                        {
                            Id = 12,
                            Amount = 5.0,
                            OperationTypeId = 0,
                            PersonFromId = 4,
                            PersonToId = 5
                        },
                        new
                        {
                            Id = 13,
                            Amount = 5.0,
                            OperationTypeId = 0,
                            PersonFromId = 4,
                            PersonToId = 5
                        },
                        new
                        {
                            Id = 14,
                            Amount = 5.0,
                            OperationTypeId = 0,
                            PersonFromId = 4,
                            PersonToId = 5
                        },
                        new
                        {
                            Id = 15,
                            Amount = 5.0,
                            OperationTypeId = 0,
                            PersonFromId = 4,
                            PersonToId = 5
                        },
                        new
                        {
                            Id = 16,
                            Amount = 5.0,
                            OperationTypeId = 0,
                            PersonFromId = 4,
                            PersonToId = 5
                        },
                        new
                        {
                            Id = 17,
                            Amount = 5.0,
                            OperationTypeId = 0,
                            PersonFromId = 4,
                            PersonToId = 5
                        },
                        new
                        {
                            Id = 18,
                            Amount = 5.0,
                            OperationTypeId = 0,
                            PersonFromId = 4,
                            PersonToId = 5
                        },
                        new
                        {
                            Id = 19,
                            Amount = 5.0,
                            OperationTypeId = 0,
                            PersonFromId = 4,
                            PersonToId = 5
                        },
                        new
                        {
                            Id = 20,
                            Amount = 5.0,
                            OperationTypeId = 0,
                            PersonFromId = 4,
                            PersonToId = 5
                        });
                });

            modelBuilder.Entity("LoanWebApp.Models.OperationType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("OperationType");

                    b.HasData(
                        new
                        {
                            Id = 0,
                            Name = "Loan"
                        },
                        new
                        {
                            Id = 1,
                            Name = "Repayment"
                        });
                });

            modelBuilder.Entity("LoanWebApp.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<string>("OtherNames")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Person");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Jānis",
                            LastName = "Bērziņš"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Līga",
                            LastName = "Ceriņa"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Andris",
                            LastName = "Ozols",
                            OtherNames = "Juris"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Anna",
                            LastName = "Vītola",
                            OtherNames = "Marija"
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "Pēteris",
                            LastName = "Osis"
                        });
                });

            modelBuilder.Entity("LoanWebApp.Models.Operation", b =>
                {
                    b.HasOne("LoanWebApp.Models.OperationType", "OperationType")
                        .WithMany()
                        .HasForeignKey("OperationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoanWebApp.Models.Person", "PersonFrom")
                        .WithMany()
                        .HasForeignKey("PersonFromId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoanWebApp.Models.Person", "PersonTo")
                        .WithMany()
                        .HasForeignKey("PersonToId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
